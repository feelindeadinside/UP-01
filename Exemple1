import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class MatrixRearrangement {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Введите размерность матрицы n: ");
        int n = scanner.nextInt();

        double[][] matrix = new double[n][n];
        Random random = new Random();

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = -n + random.nextDouble() * (2 * n);
            }
        }

        System.out.println("Исходная матрица:");
        printMatrix(matrix);

        rearrangeMatrix(matrix);

        System.out.println("Преобразованная матрица:");
        printMatrix(matrix);
    }

    public static void rearrangeMatrix(double[][] matrix) {
        int n = matrix.length;
        double[] diagonalMax = new double[n];

        for (int i = 0; i < n; i++) {
            diagonalMax[i] = matrix[i][i];
        }

        Arrays.sort(diagonalMax);
        reverseArray(diagonalMax);

        for (int i = 0; i < n; i++) {
            int maxRow = i, maxCol = i;
            double maxVal = matrix[i][i];
            for (int j = i; j < n; j++) {
                for (int k = j; k < n; k++) {
                    if (matrix[j][k] > maxVal) {
                        maxVal = matrix[j][k];
                        maxRow = j;
                        maxCol = k;
                    }
                }
            }

            double temp = matrix[i][i];
            matrix[i][i] = maxVal;
            matrix[maxRow][maxCol] = temp;
        }
    }

    public static void printMatrix(double[][] matrix) {
        for (double[] row : matrix) {
            for (double element : row) {
                System.out.printf("%8.2f", element);
            }
            System.out.println();
        }
    }

    public static void reverseArray(double[] array) {
        int left = 0, right = array.length - 1;
        while (left < right) {
            double temp = array[left];
            array[left] = array[right];
            array[right] = temp;
            left++;
            right--;
        }
    }
}
